version: 2
jobs:
  run_test:
    docker:
    - image: circleci/golang:1.12
      environment:
        GO111MODULE: "on"
    steps:
    - checkout
    - run: make setup
    - run: make test

  create_release_pr:
    docker:
    - image: circleci/golang:1.12
      environment:
        GO111MODULE: "on"
    steps:
    - checkout
    - add_ssh_keys:
        fingerprints:
          - "80:1b:4c:08:a8:82:17:dc:fc:f5:e4:6a:c8:60:67:f4"
    - run:
        name: Install commands
        command: |
          go get -u github.com/masa213f/semver/cmd/semver
    - run:
        name: Confirm the release version
        command: |
          RELEASE_VERSION=$(semver ${CIRCLE_BRANCH} --json | jq -r ".version")
          echo "export RELEASE_VERSION=${RELEASE_VERSION}" >> ${BASH_ENV}
          echo "Version: ${RELEASE_VERSION}"
    - run:
        name: Set git configs
        command: |
          # memo: GIT_CONFIG_USER_NAME and GIT_CONFIG_USER_MAIL must be set by "Environment Variables".
          git config --global user.name "${GIT_CONFIG_USER_NAME}"
          git config --global user.email "${GIT_CONFIG_USER_MAIL}"
    - run:
        name: Update program version and commit
        command: |
          echo ${RELEASE_VERSION} > version.txt
          git add version.txt
          git commit -m "Bump version to ${RELEASE_VERSION}"
          git push --set-upstream origin ${CIRCLE_BRANCH}
    - run:
        name: Install hub
        command: |
          HUB_VERSION=2.12.7
          curl -sSLf -O https://github.com/github/hub/releases/download/v${HUB_VERSION}/hub-linux-amd64-${HUB_VERSION}.tgz
          tar zxf hub-linux-amd64-${HUB_VERSION}.tgz --strip-components=1 -C /tmp/
    - run:
        name: Create a pull request
        command: |
          /tmp/bin/hub pull-request --message="Bump version to ${RELEASE_VERSION}" --base=${CIRCLE_PROJECT_USERNAME}:master --head=${CIRCLE_PROJECT_USERNAME}:${CIRCLE_BRANCH}

  add_release_tag:
    docker:
    - image: circleci/golang:1.12
      environment:
        GO111MODULE: "on"
    steps:
    - checkout
    - add_ssh_keys:
        fingerprints:
          - "80:1b:4c:08:a8:82:17:dc:fc:f5:e4:6a:c8:60:67:f4"
    - run:
        name: Set git configs
        command: |
          # memo: GIT_CONFIG_USER_NAME and GIT_CONFIG_USER_MAIL must be set by "Environment Variables".
          git config --global user.name "${GIT_CONFIG_USER_NAME}"
          git config --global user.email "${GIT_CONFIG_USER_MAIL}"
    - run:
        name: Add release tag
        command: |
          git tag $(cat version.txt)

  release_in_github:
    docker:
    - image: circleci/golang:1.12
      environment:
        GO111MODULE: "on"
    steps:
    - checkout
    - add_ssh_keys:
        fingerprints:
          - "80:1b:4c:08:a8:82:17:dc:fc:f5:e4:6a:c8:60:67:f4"
    - run:
        name: Install semver
        command: |
          go get -u github.com/masa213f/semver/cmd/semver
    - run:
        name: Build and output the program version
        command: |
          make build
          ./semver --version
          mv semver /tmp/release/semver-linux-amd64-v${RELEASE_VERSION}
    - run:
        name: Install hub
        command: |
          HUB_VERSION=2.12.7
          curl -sSLf -O https://github.com/github/hub/releases/download/v${HUB_VERSION}/hub-linux-amd64-${HUB_VERSION}.tgz
          tar zxf hub-linux-amd64-${HUB_VERSION}.tgz --strip-components=1 -C /tmp/
    - run:
        name: Release as draft
        command: |
          set -x
          if semver -p "${RELEASE_VERSION}"; then
             PRE_OPT=-p
          fi
          # memo: GITHUB_TOKEN must be set by "Environment Variables". Create an access token with "public_repo" scope.
          /tmp/bin/hub release create -d ${PRE_OPT} -m v${RELEASE_VERSION} v${RELEASE_VERSION} -a ./semver-linux-amd64-v${RELEASE_VERSION}

workflows:
  version: 2
  develop:
    jobs:
    - run_test:
        filters:
          branches:
            only:
              - develop
              - /^feature/.*/
  release:
    jobs:
    - run_test:
        filters:
          branches:
            only: /^release-v.*/
    - create_release_pr:
        requires:
          - run_test
        filters:
          branches:
            only: /^release-v.*/
  master:
    jobs:
    - add_release_tag:
        filters:
          branches:
            only: master
    - release_in_github:
        filters:
          branches:
            only: master
